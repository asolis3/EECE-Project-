#define NOTE_C4  262
#define NOTE_Db4 277
#define NOTE_D4  294
#define NOTE_Eb4 311
#define NOTE_E4  330
#define NOTE_F4  349
#define NOTE_FS4 370
#define NOTE_G4  392 
#define NOTE_Ab4 415
#define NOTE_A4  440
#define NOTE_Bb4 466
#define NOTE_B4  494
#define NOTE_C5  523
#define NOTE_Db5 554
#define NOTE_D5  587
#define NOTE_Eb5 622
#define NOTE_E5  659
#define NOTE_F5  698
#define NOTE_FS5 740
#define NOTE_G5  784
#define NOTE_Ab5 831
#define NOTE_A5  880
#define NOTE_Bb5 932
#define NOTE_B5  988
#define NOTE_C6  10470
#define REST     0
int tempo = 135;
int buzzer = 11;
int melody[] = {
  NOTE_F4, 8, NOTE_Bb4, 4, NOTE_A4, 8, NOTE_Bb4, 8,
  NOTE_G4, -4, NOTE_G4, 4, REST, 8, NOTE_G4, 8, NOTE_C5, 4, NOTE_Bb4, 8, NOTE_G4, 8,
  NOTE_F4, -4, NOTE_F4, 4, REST, 8, NOTE_F4, 8, NOTE_Bb4, 4, NOTE_A4, 8, NOTE_Bb4, 8,
  NOTE_G4, -3, NOTE_Eb4, 8, NOTE_G4, 4, NOTE_G4, 4, NOTE_F4, 8, NOTE_F4, 8, NOTE_G4, 8, NOTE_F4,8,
  NOTE_Eb4, 4, NOTE_Eb4, 8, NOTE_D4, 8, NOTE_D4, -4, NOTE_D4, 4, REST, 8, NOTE_F4, 8, 
  NOTE_Bb4, 4, NOTE_A4, 8, NOTE_Bb4, 8, NOTE_D4, -4, NOTE_Eb5, 8, NOTE_Eb5, 8, NOTE_Eb5, 8, 
  NOTE_Eb5, 8, NOTE_C5, 4, NOTE_Bb4, 8, NOTE_D4, -4, NOTE_D4, -5, REST, 8,

  
};
int notes = sizeof(melody) / sizeof(melody[0]) / 2;
int wholenote = (60000 * 4) / tempo;
int divider = 0, noteDuration = 0;
void setup() {
  // put your setup code here, to run once:
for (int thisNote = 0; thisNote < notes * 2; thisNote = thisNote + 2) {

    // calculates the duration of each note
    divider = melody[thisNote + 1];
    if (divider > 0) {
      // regular note, just proceed
      noteDuration = (wholenote) / divider;
    } else if (divider < 0) {
      // dotted notes are represented with negative durations!!
      noteDuration = (wholenote) / abs(divider);
      noteDuration *= 1.5; // increases the duration in half for dotted notes
    }
    tone(buzzer, melody[thisNote], noteDuration * 0.9);

    // Wait for the specief duration before playing the next note.
    delay(noteDuration);

    // stop the waveform generation before the next note.
    noTone(buzzer);
    
  }
}

void loop() {

}
